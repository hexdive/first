<h2>All Student Members</h2>

<p>
    <a asp-action="Create">Create New Student</a>
</p>



<div class="row mb-3">
    <div class="col-md-3">
        <input type="text" id="filterName" class="form-control" placeholder="Filter by Name">
    </div>
    <div class="col-md-3">
        <input type="text" id="filterEmail" class="form-control" placeholder="Filter by Email">
    </div>
    <div class="col-md-3">
        <button id="filterBtn" class="btn btn-primary">Filter</button>
        <button id="clearFilterBtn" class="btn btn-secondary">Clear</button>
    </div>
</div>

<button id="loadStudentsBtn" class="btn btn-success">Show Student List</button>


<div id="studentTableContainer" style="display: none; margin-top: 20px;">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="studentTable"></tbody>
    </table>
</div>

@section Scripts {
    <script>
        function loadStudents(filters = {}) {
            let queryParams = new URLSearchParams(filters).toString();

            fetch('/Students/GetAllStudents?' + queryParams)
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Network response was not ok");
                    }
                    return response.json();
                })
                .then(data => {
                    let tableContent = "";
                    if (data.length === 0) {
                        tableContent = "<tr><td colspan='4'>No student records found.</td></tr>";
                    } else {
                        data.forEach(student => {
                            tableContent += `
                                <tr>
                                    <td>${student.id}</td>
                                    <td>${student.name}</td>
                                    <td>${student.email}</td>
                                    <td>
                                        <button class="btn btn-info" onclick="viewStudent(${student.id})">View</button>
                                        <button class="btn btn-warning" onclick="editStudent(${student.id})">Edit</button>
                                        <button class="btn btn-danger" onclick="deleteStudent(${student.id})">Delete</button>
                                    </td>
                                </tr>`;
                        });
                    }
                    document.getElementById("studentTable").innerHTML = tableContent;
                    document.getElementById("studentTableContainer").style.display = "block";
                })
                .catch(error => {
                    console.error("Error fetching student data:", error);
                    document.getElementById("studentTable").innerHTML = "<tr><td colspan='4'>Failed to load data.</td></tr>";
                });
        }

        function viewStudent(id) {
            window.location.href = `/Students/Details/${id}`;
        }

        function editStudent(id) {
            window.location.href = `/Students/Edit/${id}`;
        }

        function deleteStudent(id) {
            if (confirm("Are you sure you want to delete this student member?")) {
                fetch(`/Students/Delete/${id}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Network response was not ok");
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert("Student deleted successfully!");
                        loadStudents();
                    } else {
                        alert("Failed to delete student: " + data.message);
                    }
                })
                .catch(error => {
                    console.error("Error deleting student:", error);
                    alert("An error occurred while deleting the student.");
                });
            }
        }

        document.getElementById("loadStudentsBtn").addEventListener("click", () => loadStudents());

        document.getElementById("filterBtn").addEventListener("click", () => {
            let filters = {
                name: document.getElementById("filterName").value.trim(),
                email: document.getElementById("filterEmail").value.trim()
            };
            loadStudents(filters);
        });

        document.getElementById("clearFilterBtn").addEventListener("click", () => {
            document.getElementById("filterName").value = "";
            document.getElementById("filterEmail").value = "";
            loadStudents();
        });
    </script>
}
